version: 0.2

batch:
  fast-fail: true
  build-graph:
    - identifier: amd64
      env:
        privileged-mode: true
        variables:
          PG_MAJOR: "10"
          ARCH: "amd64"
      buildspec: buildspec.yml
    - identifier: arm64v8
      env:
        type: ARM_CONTAINER
        image: aws/codebuild/amazonlinux2-aarch64-standard:2.0
        privileged-mode: true
        variables:
          PG_MAJOR: "10"
          ARCH: "arm64v8"
      buildspec: buildspec.yml
    - identifier: manifest
      env:
        privileged-mode: true
      depend-on:
        - amd64
        - arm64v8
      # Without a buildspec, the manifest build will use the phases defined in
      # this file
phases:
  pre_build:
    commands:
      - echo Logging into Amazon ECR
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
      - HEAD_REF=${CODEBUILD_WEBHOOK_HEAD_REF:-$WEBHOOK_HEAD_REF_OVERRIDE}
      - RESOLVED_SOURCE_VERSION=${CODEBUILD_RESOLVED_SOURCE_VERSION:-$RESOLVED_SOURCE_VERSION_OVERRIDE}
      - echo Head ref is $HEAD_REF
      - echo Resolved source version is $RESOLVED_SOURCE_VERSION
      - PG_MAJOR=10
      - IMAGE_TAG="$PG_MAJOR"
      - echo Image tag is $IMAGE_TAG
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker manifest...
      # The docker manifest CLI command is currently experimental
      - DOCKER_CLI_EXPERIMENTAL=enabled
      - docker manifest create public.ecr.aws/m4f7q4x5/$IMAGE_REPO_NAME:$IMAGE_TAG public.ecr.aws/m4f7q4x5/$IMAGE_REPO_NAME:$RESOLVED_SOURCE_VERSION-$PG_MAJOR-arm64v8 public.ecr.aws/m4f7q4x5/$IMAGE_REPO_NAME:$RESOLVED_SOURCE_VERSION-$PG_MAJOR-amd64
      - docker manifest annotate --arch arm64 public.ecr.aws/m4f7q4x5/$IMAGE_REPO_NAME:$IMAGE_TAG public.ecr.aws/m4f7q4x5/$IMAGE_REPO_NAME:$RESOLVED_SOURCE_VERSION-$PG_MAJOR-arm64v8
      - docker manifest annotate --arch amd64 public.ecr.aws/m4f7q4x5/$IMAGE_REPO_NAME:$IMAGE_TAG public.ecr.aws/m4f7q4x5/$IMAGE_REPO_NAME:$RESOLVED_SOURCE_VERSION-$PG_MAJOR-amd64
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker manifest push public.ecr.aws/m4f7q4x5/$IMAGE_REPO_NAME:$IMAGE_TAG
      - docker manifest inspect public.ecr.aws/m4f7q4x5/$IMAGE_REPO_NAME:$IMAGE_TAG
